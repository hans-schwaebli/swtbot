This is a HOWTO that documents how releases are made:

Changes in code:
================
1. Change the property "Bundle-Version" in all MANIFEST.MF files. This property should be of the form X.Y.Z.qualifier
2. Change the version in feature.xml
3. Change the property "plugin.version.primary" to X.Y.Z in net.sf.swtbot.build/build.xml
4. Change the property "plugin.suffix" to ${svn.version}-SUFFIX (suffix can be alpha, beta, or none at all)
5. Check in the code

Tag/switch the release:
================
1. Tag the release at the location http://swtbot.svn.sourceforge.net/svnroot/swtbot/tags/X.Y.Z-SUFFIX
     # svn copy http://swtbot.svn.sourceforge.net/svnroot/swtbot/trunk http://swtbot.svn.sourceforge.net/svnroot/swtbot/tags/X.Y.Z-SUFFIX
2. Switch to the new tag:
     # svn switch http://swtbot.svn.sourceforge.net/svnroot/swtbot/tags/X.Y.Z-SUFFIX

Run special ant targets:
========================

For sourceforge update site:
==============================
1. Set the ant property "remote.path" to a location where the build will be uploaded via rsync.
2. Set the property "has.archives" to true
3. Set the property "update.site.features.url" and "update.site.plugins.url" to http://downloads.sourceforge.net/swtbot
4. Set the property "remote.path" to "kpadegaonkar@shell.sf.net:/home/groups/s/sw/swtbot/htdocs/artifacts/X.Y.Z/"
5. Run the "cruise-upload" ant target. This target will run the complete build, generate artifacts, update site etc. and upload the file via rsync

For a local update site:
========================
1. Set the property "has.archives" to false
2. Set the property "update.site.features.url" to "features"
3. Set the property "update.site.plugins.url" to "plugins"
4. Run the ant target "create-update-site"
5. Check in the following artifacts into http://swtbot.svn.sourceforge.net/svnroot/swtbot/artifacts/X.Y.Z:
  a. coverage
  b. junit
  c. update-site
  d. apidocs
6. Upload the artifacts to the SourceForge FRS. These files include the actual plugins, a zip of the update site, and an MD5SUM of all the files.

Release Notes:
==============
1. Type the release notes at http://eclipse.org/wiki/Release_Notes_-_X.Y.Z (replace X.Y.Z with the actual version numbers). Ensure that the page is locked for editing.
2. Navigate to http://eclipse.org/wiki/Releases
  a. Add links for:
    i. release notes http://eclipse.org/wiki/Release_Notes_-_X.Y.Z
    ii. SVN repository tag http://swtbot.svn.sourceforge.net/svnroot/swtbot/tags/X.Y.Z
    iii. The location to javadocs api http://eclipse.org/artifacts/X.Y.Z/apidocs
    iv. The location to JUnit results http://eclipse.org/artifacts/X.Y.Z/junit
    v. The location to Code Coverage Reports http://eclipse.org/artifacts/X.Y.Z/coverage
3. Navigate to http://eclipse.org/wiki/MediaWiki:Sidebar and edit the release notes link to "Release Notes - X.Y.Z"
4. Update the news section on http://eclipse.org/wiki/Main_Page

Make symlinks for build artifacts:
==================================
1. The general structure of the artifacts directory is:
  a. http://eclipse.org/artifacts/X.Y.Z/apidocs/
  b. http://eclipse.org/artifacts/X.Y.Z/coverage/
  c. http://eclipse.org/artifacts/X.Y.Z/junit/
  d. http://eclipse.org/artifacts/X.Y.Z/update-site/
2. Create a symlink so that http://eclipse.org/latest points to http://eclipse.org/artifacts/X.Y.Z
3. Create a symlink so that http://eclipse.org/update-site/ points to http://eclipse.org/latest/update-site. This is the update site that is used by clients.


Make a blog entry:
==================
1. Does this need explanation ?

